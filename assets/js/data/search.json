[ { "title": "Adaptive AUTOSAR를 연구&amp;개발하며..", "url": "/posts/memoir2/", "categories": "DeepThinking, Memoir", "tags": "DeepThinking, GithubPage, Memoir, AdaptiveAUTOSAR, AUTOSAR, ClassicAUTOSAR, ECU, CPU, GPU, OTA", "date": "2021-04-15 01:00:00 +0900", "snippet": "간만에 일기 겸 긴 글을 남기고 싶어서 이 글을 시작한다.필자는 Adaptive AUTOSAR 표준 기반 플랫폼 개발을 해온지 일년반정도 됐다.Adaptive AUTOSAR는 AUTOSAR 컨소시엄에서 제정해오고있는 차세대 Automotive Application을 위한 공통의 아키텍쳐를 Open System으로 정의하고 있는 표준 아키텍쳐를 의미한다.이 기술 표준 아키텍쳐가 지향하는 바는 지속가능하고 재사용 가능한 차량환경에서의 Software Application이 동작하고 개발될 수 있도록하는 전체적인 큰 그림을 그리는 ..." }, { "title": "About POSIX", "url": "/posts/POSIX/", "categories": "TechSavvy, ComputerArchitecture", "tags": "Blogging, POSIX, ComputerArchitecture, Linux, AGL, EmbeddedLinux, OpenEmbedded, Yocto, CrossDevelopment, GCC, GDB, Toolchain", "date": "2021-04-14 01:00:00 +0900", "snippet": "About POSIX General Portable Operation System Integration From 1988~ 여러 운영체제들이 사용하는 API가 모두 달라서 새발하는데 애로사항이 많으므로 최소한의 영역에서라도 통일 시켜보자는 의미에서 시작 spec : http://get.posixcertified.ieee.org/ Versions POSIX.1 (IEEE 1003.1-1988): core services POSIX..." }, { "title": "ABI Standards", "url": "/posts/ABIStandards/", "categories": "TechSavvy, ComputerArchitecture", "tags": "Blogging, ComputerArchitecture, Linux, AGL, EmbeddedLinux, OpenEmbedded, Yocto, CrossDevelopment, GCC, GDB, Toolchain", "date": "2021-04-11 01:00:00 +0900", "snippet": "ABI(Application Binary Interface) 표준Application간 binary 데이터를 어떻게 교환해야 하는지 다음과 같은 규칙들을 정한다. 데이터 타입과 정렬 방법 함수 호출 시 인수 및 결과에 대해 레지스터 교환 방법 시스템 콜 호출 방법 프로그램 코드의 시작과 데이터에 대한 초기화 방법 파일 교환 방법(ELF 등)EABI 표준EABI(Embeded ABI)는 임베디드 환경의 ABI를 다룬다. ARM 아키텍처에서 리눅스 버전에 따라 ABI를 사용하는 방식이 다음 두 가지로 나뉜다. arm/O..." }, { "title": "ARM64", "url": "/posts/ARM64/", "categories": "TechSavvy, ComputerArchitecture", "tags": "Blogging, ComputerArchitecture, Linux, AGL, EmbeddedLinux, OpenEmbedded, Yocto, CrossDevelopment, GCC, GDB, Toolchain", "date": "2021-04-10 01:00:00 +0900", "snippet": "정의ARM이 64bit을 도입하며 한 정의 AArch32 – Thumb 모드 실행을 포함한 ARM에서 정의된 레거시 32비트 명령 집합 아키텍처(ISA)입니다. AArch64 – ARM에서 정의된 새 64비트 ISA(명령 집합 아키텍처)입니다. ARMv7 - AArch32에 대한 지원도 포함하는 “7세대” ARM 하드웨어의 사양입니다. 이 버전의 ARM 하드웨어는 ARM용 Windows가 지원되는 첫 버전입니다. ARMv8 - AArch32 및 AArch64 모두에 대한 지원을 포함하는 “8세대” ARM 하드웨어의 사양..." }, { "title": "Preferred Networks", "url": "/posts/PreferredNetworks/", "categories": "DeepThinking, AI", "tags": "DeepThinking, AI, GithubPage, Memoir, AdaptiveAUTOSAR, AUTOSAR, ClassicAUTOSAR, ECU, CPU, GPU, OTA", "date": "2021-04-10 01:00:00 +0900", "snippet": "About this post이 글은 Bain&amp;amp;Company 출신 Jihyo Lee님의 포스팅을 퍼온 것입니다.Preferred Networks최근에 본 무수히 많은 AI 스타트업 중에 가장 스케일이 크고 대담한 업체. 일본기업이라 숨어있어서 그렇지 엄청나다 못해 황당한 수준이다.초기엔 Tensorflow같은 AI framework을 자체적으로 만들었고, 아래로는 CuDNN같은 library를, 위로는 AI 모델의 hyperparameter 최적화하는 tool 등으로 확장하더니만 아예 각잡고 자기 전용 GPU cl..." }, { "title": "04.Remote Debugging Using VSCode", "url": "/posts/04-RemoteDebuggingUsingVSCode/", "categories": "TechSavvy, EmbeddedLinux", "tags": "Blogging, Linux, AGL, EmbeddedLinux, OpenEmbedded, Yocto, CrossDevelopment, GCC, GDB, Toolchain", "date": "2021-04-09 01:00:00 +0900", "snippet": "Preface본 포스팅은 아래 포스팅의 연장선이다. 03.RemoteDebuggingUsingGdbserver VS Code의 Remote-Development 기능에 대한 포스팅도 설명예정 (추후 업로드)03.RemoteDebuggingUsingGdbserver 에서 Setup한 환경을 그대로 이어간다.0. Setting up Environment위 그림은 두개의 VS Code에서 각각 Docker Container를 띄운 상황이다. Host IP : 172.25.125.2 Target IP : 172.25.125.3..." }, { "title": "03.Remote Debugging Using Gdbserver", "url": "/posts/03-RemoteDebuggingUsingGdbserver/", "categories": "TechSavvy, EmbeddedLinux", "tags": "Blogging, Linux, AGL, EmbeddedLinux, OpenEmbedded, Yocto, CrossDevelopment, GCC, GDB, Toolchain", "date": "2021-04-08 01:00:00 +0900", "snippet": "디버거 툴인 gdbserver 와 gdb를 이용하여 원격 디버깅을 할 수 있는 방법을 포스팅한다.Remote debugging이란 실제로 Application이 동작하고 있는 Target에 gdbserver를 실행시켜 원격 Host에서 gdb 및 toolchain을 활용하여 디버깅하는 방식이다.Ref. Linux Foundation Conference 2020이 방식은 Target에는 compiler를 통해 최적화 및 디버깅 심볼을 제외한 어플리케이션을 gdbserver를 통해 Listening 시키고, 원격 Host에서는 ..." }, { "title": "02. Preparing To Debug With GDB", "url": "/posts/02-PreparingToDebugWithGDB/", "categories": "TechSavvy, EmbeddedLinux", "tags": "Blogging, Linux, AGL, EmbeddedLinux, OpenEmbedded, Yocto, CrossDevelopment, GCC, GDB, Toolchain", "date": "2021-04-07 01:00:00 +0900", "snippet": "Toolchain 이 준비가 됐다면 일단 도구들은 다 준비가 됐다고 봐도 된다.이제 실제로 디버깅을 해야할 대상을 디버깅 할 수 있게 만들자.Compiler Option 조정Ref: Linux Foundation 2020 Conference먼저 c나 c++ 소스코드를 컴파일 할때 위 그림처럼 -g 옵션이나 -gN 옵션을 주어 source code debugging 정보 등 다양한 정보들이 elf에 포함되게 만들어준다.-ggdbN 을 사용하게되면 표준 DWARF format 대신 gdb format을 사용하여 elf를 생성한다...." }, { "title": "01. ToolChain", "url": "/posts/01-Toolchain/", "categories": "TechSavvy, EmbeddedLinux", "tags": "Blogging, Linux, AGL, EmbeddedLinux, OpenEmbedded, Yocto, CrossDevelopment, GCC, GDB, Toolchain", "date": "2021-04-06 01:00:00 +0900", "snippet": "What is Toolchain?Toolchain이란 말 그대로 Cross Develepment를 위한 도구들의 집합이다.Ref: Linux Foundation 2020 Conference위 그림처럼 GNU Toolchain은 크게 컴파일러, binutils, C 라이브러리, GDB 디버거로 나뉘어진다. 컴파일러 : 호스트 개발환경에서 타겟의 아키텍쳐로 컴파일하기 위한 도구이고 binutils : 컴파일한 Object 들을 컨트롤하기 위한 어셈블러, 링커 등 C 라이브러리 : POSIX 및 리눅스 커널 인터페이스 GDB..." }, { "title": "About l-r-value &amp; Move Semantic of Modern C++", "url": "/posts/about-l-r-value/", "categories": "TechSavvy, C++", "tags": "TechSavvy, ProgrammingLanguage, C++, l-value, r-value, move", "date": "2021-04-06 01:00:00 +0900", "snippet": "Modern C++의 l-r-value &amp;amp; Move Semantic 에 대하여0. Preface들어가기 전에 참조(&amp;amp;)와 포인터(*)의 기본 개념을 짚어보자. 참조(&amp;amp;)는 포인터(*)와 같이 메모리 어딘가에 위치한 개체의 주소를 저장한다.하지만 참조는 한번 초기화 된 후 다른 개체를 참조하거나 null로 만들 수 없다.값(value)은 l-value 와 r-value 두가지로 분류가 가능하다.l-value 와 r-value 즉, 좌측값과 우측값의 정의는 C 언어로부터 내려온다. ..." }, { "title": "00. Cross Development", "url": "/posts/00-CrossDevelopment/", "categories": "TechSavvy, EmbeddedLinux", "tags": "Blogging, Linux, AGL, EmbeddedLinux, OpenEmbedded, Yocto, CrossDevelopment, GCC, GDB, Toolchain", "date": "2021-04-05 01:00:00 +0900", "snippet": "What is Cross Development?Cross Development란 내가 지금 개발하고 있는 환경과 실제 개발된 어플리케이션이 동작하는 환경이 다르게 어플리케이션을 개발하는 것을 의미한다.예를 들면 Windows 10 환경에서 Visual Studio로 Windows 10에서 동작하는 어플리케이션을 만들 수도 있지만, 프레임워크의 도움을 받아 OS 레벨에선 iOS, Android등에서 동작하는 어플리케이션도 만들 수 있다. Xamarin, UWP, Flutter등이 그 프레임워크의 예이다.환경이 다르다는 것은 어떤..." }, { "title": "2020년 회고록", "url": "/posts/2020/", "categories": "DeepThinking, Memoir", "tags": "DeepThinking, GithubPage, Memoir, AdaptiveAUTOSAR, AUTOSAR, ClassicAUTOSAR, ECU, CPU, GPU, OTA", "date": "2020-12-31 01:00:00 +0900", "snippet": "2020년 회고록누가 그러던가 대리~과장이 가장 일을 잘할 때고 많이 할 때라고..눈 감았다 뜨니 4Q가 왔다.헐이다 헐4.5년간의 대학원 생활때는 이론적인 부분에 집중한 연구를 했고, 3년간의 군복무 기간동안에는 사용자를 위해 최대한의 실행력을 요구하는 일을 했다가, 이제는 그 두 부분이 모두 필요한 플랫폼 개발쪽의 일을 하고 있다고 보면 된다.지금 하는일을 좀 더 자세히 이야기 하자면 Adaptive AUTOSAR 플랫폼, 즉 AP 미들웨어라 흔히들 부르고, 차량에 탑재되어야할 고성능 컴퓨팅 칩들에 들어갈 매우 중요한 요소..." }, { "title": "constexpr", "url": "/posts/constexpr/", "categories": "TechSavvy, C++", "tags": "TechSavvy, ProgrammingLanguage, C++", "date": "2020-11-27 01:00:00 +0900", "snippet": "constexpr0. Preface필자는 constexpr 가 왜 이리도 헷갈리는지 진짜 잠을 설칠 정도였다.도저히 못참겠어서 이렇게 정리하기로 한다.constexpr는 Modern cpp 인 c++11 이상에서 지원되고 잇다.constexpr의 스펙은 STL 버전이 진화하면서 따라 달라지고 있다고 한다.다양한 강의자료 및 사용처들을 살펴봤는데 다들 사용하는 용도가 다른 것 같아서 그런건지, 이해하고 있는 게 다 다른 것 같다.constexpr의 원작자의 의도는 분명 무언가가 있었겠지만 지금은 처음과는 많이 다른 것 같다.다만..." }, { "title": "CV-qualifiers", "url": "/posts/CV-qualifiers/", "categories": "TechSavvy, C++", "tags": "TechSavvy, ProgrammingLanguage, C++", "date": "2020-11-27 01:00:00 +0900", "snippet": "CV-qualifiers0. Prefaceconst 는 Contatnt 즉 상수를 표현하기 위한 기법이고 volatile 은 휘발성(?) 타입이라는 것을 표현하기위한 기법이다.STL에서 cont는 volatile 과 함께 cv qualifiers 로 정의한다. Link:1. NotationC++ 에서 cv qualifiers 와 같은 type 한정자(?)는 type의 왼쪽 및 오른쪽 양쪽 다에 올 수 있다.예를 들어보자 const int i = 100; int const i = 100;여러 프로그래밍 언어를 하는 독..." }, { "title": "Bash set utility?", "url": "/posts/Bash-set/", "categories": "TechSavvy, Bash", "tags": "TechSavvy, ProgrammingLanguage, Bash", "date": "2020-11-17 01:00:01 +0900", "snippet": "setset -eset -e 가 script 내에 실행되어있으면 동작하는 쉘 환경은 script명령어가 error 를 발생하면서 죽었을때 다음 명령을 수행하지 않는다exit code일반적으로 unix 에서는 0 은 성공, 1~255 는 error code 로 인식됨인식되는 범위는 0~255 16bit$? 로 결과값을 확인 가능$ cat test.shecho &quot;hello&quot;exit 100$ sh test.shhello$ echo $?100set -xset -x 가 script 내에 실행되어있으면 동작하는 쉘 환경..." }, { "title": "Bash sed?", "url": "/posts/Bash-sed/", "categories": "TechSavvy, Bash", "tags": "TechSavvy, ProgrammingLanguage, Bash", "date": "2020-11-17 01:00:01 +0900", "snippet": "6. sedsed Utility를 사용안해본사람은 있어도 한번만 사용한 사람은 없다 전해지는 전설의 레전드Appendix. References General : http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_01.html" }, { "title": "Bash Get Ip address?", "url": "/posts/Bash-for/", "categories": "TechSavvy, Bash", "tags": "TechSavvy, ProgrammingLanguage, Bash", "date": "2020-11-17 01:00:01 +0900", "snippet": "Get Ip Address만약 ethernet interface가 eth0 인 경우$ IPADDR=$(ifconfig eth0|grep inet|head -1|sed &#39;s/\\:/ /&#39;|awk &#39;{print $2}&#39;)$ echo $IPADDR172.17.0.3Appendix. References General : http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_01.html" }, { "title": "Bash eval utility?", "url": "/posts/Bash-eval/", "categories": "TechSavvy, Bash", "tags": "TechSavvy, ProgrammingLanguage, Bash", "date": "2020-11-17 01:00:01 +0900", "snippet": "evaleval 뒤의 string arg 들을 command 로 실행하게 해줌 string 수준에서 최종 Command 조작 후 실행시 유용하다usagesAppendix. References General : http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_01.html" }, { "title": "Bash list?", "url": "/posts/Bash-array/", "categories": "TechSavvy, Bash", "tags": "TechSavvy, ProgrammingLanguage, Bash", "date": "2020-11-17 01:00:01 +0900", "snippet": "array(list)Bash 에서는 괄호로 Array를 표현가능하다그 안에서 구분자는 아무래도 띄어쓰기(space bar) 이다$ cat array_ex.sh#!/bin/bashlists=(&quot;a&quot; b &quot;c&quot;)echo ${lists[1]}echo ${lists[0]}echo ${lists[3]}echo ${lists[2]}$ sh array_ex.shbac아래 예제와 같이 Slicing도 지원된다.lists=(&quot;V0.1.0&quot; &quot;V1.0.0&quot;)echo &quo..." }, { "title": "Bash String Comparision with if", "url": "/posts/Bash-String-Comparision/", "categories": "TechSavvy, Bash", "tags": "TechSavvy, ProgrammingLanguage, Bash", "date": "2020-11-17 01:00:01 +0900", "snippet": "Bash string comparision using “if””==” and “!=” only can be used in case of string comparision.if [ &quot;$STRING&quot; == &quot;abc&quot; ];then echo &quot;STRING is abc!&quot;fi orif [ &quot;$STRING&quot; = &quot;abc&quot; ];then echo &quot;STRING is abc!&quot;fi Appendix. References Gen..." }, { "title": "Bash for and while?", "url": "/posts/Bash-GetIPAddr/", "categories": "TechSavvy, Bash", "tags": "TechSavvy, ProgrammingLanguage, Bash", "date": "2020-11-17 01:00:01 +0900", "snippet": "for$ cat for.sh #!/bin/bashLISTS=(&quot;a&quot; &quot;b&quot; &quot;c&quot;) # Don&#39;t forget Brace!echo ${LISTS[0]}echo ${LISTS[1]}echo ${LISTS[2]}# Don&#39;t forget Brace!for item in ${LISTS[@]}do echo $itemdone$ ./for.shabcabc아래는 find, eval, sed 를 함께 쓴 예제for file in $(find . -name &quot;*..." }, { "title": "Bash and &amp; or with if", "url": "/posts/Bash-DirectoryExists/", "categories": "TechSavvy, Bash", "tags": "TechSavvy, ProgrammingLanguage, Bash", "date": "2020-11-17 01:00:01 +0900", "snippet": "And$ cat and_or.sh #!/bin/bashtest_and_or(){ TEST=&quot;11&quot; TEST2=&quot;22&quot; if [ &quot;$TEST&quot; == &quot;11&quot; ] &amp;amp;&amp;amp; [ &quot;$TEST2&quot; == &quot;22&quot; ] ;then echo &quot;String Exist by And&quot; fi if [ &quot;$TEST&quot; == &quot;33&quot;..." }, { "title": "Bash Directory Exists?", "url": "/posts/Bash-AndOR/", "categories": "TechSavvy, Bash", "tags": "TechSavvy, ProgrammingLanguage, Bash", "date": "2020-11-17 01:00:01 +0900", "snippet": "Directory Exists?$ cat directory_ex.sh #!/bin/bashtest_dir_exist(){ set -e if [ -e &quot;/home/jayleekr/workspace/00_codes/05_info_archive&quot; ];then echo &quot;DIR Exist&quot; exit 1 fi}test_fail(){ echo &quot;test_fail&quot;}test_dir_exist$ ./directory_ex.shDIR Exis..." }, { "title": "Yocto 빌드 시스템", "url": "/posts/YoctoBasics-1/", "categories": "TechSavvy, Yocto", "tags": "TechSavvy, ProgrammingLanguage, Yocto", "date": "2020-11-16 11:00:00 +0900", "snippet": "1. 들어가며본 문서에서는 필자가 Yocto Project의 빌드시스템 기반으로 빌드 및 배포하기 위해 스터디한 부분들 중 중요 개념들을 정리한다.Yocto Project 의 공식홈페이지에 Mega Manual 이라고 써있을 정도로 무지막지한 메뉴얼 양을 자랑하기 때문에 이를 전부 다 깨우치는 것은 필자의 레벨에서는 의미가 크게 없다고 생각하기 때문에, 중요 부분들만 그림을 섞어 설명하도록 한다.친절하게 링크를 걸어둘터이니 볼테면 봐보시라 –&amp;gt; mega-manual구글링을 통한 필자의 주관적 분석이 많이 섞여있으..." }, { "title": "Github Blog 관련 FAQ", "url": "/posts/Blog-%EA%B4%80%EB%A0%A8-FAQ/", "categories": "TechSavvy, Github", "tags": "TechSavvy, Github, ProgrammingLanguage, Yocto", "date": "2020-11-10 01:00:00 +0900", "snippet": "1. 구글 검색 활성화1.1 Activate sitemapModify _config.ymlplugins: [&#39;jekyll-paginate&#39;, &#39;jekyll-sitemap&#39;, &#39;jekyll-include-cache&#39;, &#39;jekyll-gist&#39;]1.2 Add robots.txtUser-agent: *Allow:/Sitemap: https://jayleekr.github.io/sitemap.xml1.3 Register sitemap to google search console..." }, { "title": "AGL(Automotive Grade Linux)에 대하여", "url": "/posts/AGL-%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC/", "categories": "TechSavvy, OperatingSystems", "tags": "Blogging, Linux, AGL, EmbeddedLinux, OpenEmbedded, Yocto, CrossDevelopment, GCC, GDB, Toolchain", "date": "2020-10-19 01:00:00 +0900", "snippet": "1. 들어가며AGL(Automitive Grade Linux)는 유럽, 일본, 한국 등 다양한 차량제조 및 부품회사들이 협력하여 만들고 있는 차량환경에 적합한 Opensource OS(Operating System)입니다..Toyota의 막강한 Funding 력으로 Linux Foundation의 지휘를 받으며 빠르게 발전하고 있습니다.참여하고 있는 멤버 회사들은 매우 많지만 그 중 Toyota를 필두로 하여 일본계 회사들이 매우 적극적으로 달려들고 있습니다.https://www.automotivelinux.org/about/..." }, { "title": "GPG Signature를 Github에 추가하자", "url": "/posts/Adding-GPG-signature/", "categories": "TechSavvy, Github", "tags": "TechSavvy, Github, ProgrammingLanguage, Yocto", "date": "2020-10-07 00:00:00 +0900", "snippet": "About GPGGPG는 GNU Privacy Gourd 의 약자로 PGP라고 불리기도 합니다. :D강력한 암호화 프로그램으로서 Ubuntu를 설치할때 기본적으로 포함되는 패키지이도 하죠!Github는 오픈소스 저장소이기 때문에 누구나 clone을 통하여 데이터에 접근이 가능합니다.다만 개인저장소와 같은 Private 한 기능도 제공하는데,이러한 저장소에 Push, Clone, Pull 을 해가며 공동작업을 하는 데이터를 누군가가 옅보는 일은 매우 불쾌한 일이죠.그래서 Github 에서는 Pull Request시 GPG Sig..." }, { "title": "저장소끼리 동기화하기", "url": "/posts/%EA%B7%B8%EB%A3%B9%EC%A0%80%EC%9E%A5%EC%86%8C%EC%99%80-fork%ED%95%9C-%EC%A0%80%EC%9E%A5%EC%86%8C-%EB%8F%99%EA%B8%B0%ED%99%94%ED%95%98%EA%B8%B0/", "categories": "TechSavvy, Github", "tags": "TechSavvy, Github, ProgrammingLanguage, Yocto", "date": "2020-10-05 01:00:00 +0900", "snippet": "TLDR내 저장소(fork) : https://github.com/jayleekr/adas-study-group.github.io그룹 저장소 : https://github.com/ADAS-study-group/adas-study-group.github.io0. 로컬에 내 저장소(fork)를 땡겨오자.이미 했으면 안해도 되는거 아시쥬?$ git clone https://github.com/jayleekr/adas-study-group.github.io.git forked_repo$ cd forked_repo1. 로컬에 있는 내 ..." }, { "title": "어떻게 저장소에 올리죠?", "url": "/posts/%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%97%90-%EC%98%AC%EB%A6%AC%EC%A3%A0/", "categories": "TechSavvy, Github", "tags": "TechSavvy, Github, ProgrammingLanguage, Yocto", "date": "2020-09-20 15:10:00 +0900", "snippet": "TLDR1. 내 계정 저장소로 fork 한다2. 내 저장소에서 작업을 글을 쓴다3. 빌드$ bash tools/build.shConfiguration file: /home/jayleekr/00_Projects/08_ADAS_main/_config.yml Cleaner: Removing /home/jayleekr/00_Projects/08_ADAS_main/_site... Cleaner: Nothing to do for /home/jayleekr/00_Projects/08_ADAS_main/.je..." }, { "title": "Github Blog 만들기", "url": "/posts/Github-Pages%EB%A1%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8%EB%A7%8C%EB%93%A4%EA%B8%B0/", "categories": "TechSavvy, Github", "tags": "TechSavvy, Github, ProgrammingLanguage, Yocto", "date": "2020-09-11 15:10:00 +0900", "snippet": "How it worksGithub 에서는 해당 계정 Username 이름으로 연동된 web page를 제공해둔다.예를들면 필자의 Github User ID 가 jayleekr이고,해당 계정의 Repository에 https://github.com/jayleekr/jayleekr.github.io 와 같이 새로운 블로그 용 Repository를 만들면https://jayleekr.github.io/ 라는 주소로 웹페이지가 생성한 블로그용 Repository와 연동이 된다.이 말은 해당 저장소를 가지고 있는 Github측(Remo..." }, { "title": "토이 프로젝트 #1", "url": "/posts/toyproject1/", "categories": "Collaboration, ToyProjects", "tags": "ToyProjects, C#, Windows, Youtube, Downloader, 유튜브, 다운로더, 유튜버", "date": "2019-04-17 13:00:00 +0900", "snippet": "[J-YoutubeDL는 뭔가유?]유튜브 링크(URL)을 복사해서 붙여넣으면 해당 유튜브 링크에서 지원하는 영상 및 음악 퀄리티들을 원하는대루 다운가능한 Windows용 프로그램이다.[왜만들었나유?]웹에서 링크입력해서 이용하다가 다른 퀄리티로 받고싶어서 직접 만듬[설치&amp;amp;실행 어찌하나유?]설치 파일 링크위 링크에 들어가면 소스코드부터 설치파일, .Net40 다 있다.dotnetfx40 어쩌구 프로그램은 윈도우 피씨에 해당 프레임워크가 깔려있으면 안깔아도되고, 심지어 설치할때 웹으로 연결해서 자동 다운을 받아준다. ..." } ]
